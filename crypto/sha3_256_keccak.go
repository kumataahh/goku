package crypto

import (
	"golang.org/x/crypto/sha3"
)

/*
var INPUT = [55]byte{
    0x52, 0xe7, 0xa3, 0x05,
    0x90, 0x2f, 0xa9, 0xfb,
    0xf6, 0x24, 0x20, 0xa7,
    0x84, 0x96, 0x87, 0x2f,
    0x57, 0xe7, 0x2b, 0xe6,
    0x32, 0x15, 0x99, 0x14,
    0x89, 0x20, 0x9a, 0x84,
    0xd4, 0x50, 0x5b, 0x1a,
    0x00, 0x62, 0x82, 0x5b,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x04, 0x5b,
	0x00, 0x05, 0xe9,
}

// "abc"
var TEST = [3]byte{
	0x61, 0x62, 0x63,
}
*/


// Keccak256 calculates and returns the Keccak256 hash of the input data.
func Keccak256(data ...[]byte) []byte {
	d := sha3.NewLegacyKeccak256()
	for _, b := range data {
		d.Write(b)
	}
	return d.Sum(nil)
}


 
 
/*

func main(){
	kecc_hash := crypto.Keccak256(INPUT[:])
	fmt.Printf("Keccak-256: %+02x\n", kecc_hash)
}

*/
